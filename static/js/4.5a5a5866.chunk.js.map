{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","to","name","Message","message","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","newMessageBody","isAuth","s","dialogsItems","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCWpMC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,yBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAClD,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCDnBC,EAJC,SAACT,GACb,OAAO,yBAAKG,UAAWC,IAAQC,QAASL,EAAMU,QAAvC,M,iCCkBIC,cAAU,CAACC,KAAM,2BAAjBD,EAfQ,SAACX,GACpB,OACI,0BAAMa,SAAUb,EAAMc,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAEXC,YAAY,qBAAqBV,KAAK,oBAEjD,6BACI,gDCoBDW,EA5BC,SAACnB,GAEb,IAAIoB,EAAQpB,EAAMqB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYjB,KAAMiB,EAAEjB,KAAMkB,IAAKD,EAAEvB,GAAIA,GAAIuB,EAAEvB,QACrFyB,EAAmBP,EAAMQ,SAASJ,KAAK,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASnB,QAASmB,EAAEnB,QAASgB,IAAKG,EAAE3B,QAC/DkB,EAAMU,eAM3B,OAAK9B,EAAM+B,OAGP,yBAAK5B,UAAW6B,IAAET,SACd,yBAAKpB,UAAW6B,IAAEC,cACZX,GAEN,yBAAKnB,UAAW6B,IAAEJ,UACd,6BAAOD,IAGX,kBAAC,EAAD,CAAgBd,SAfJ,SAACqB,GACjBlC,EAAMmC,YAAYD,EAAOJ,oBAGH,kBAAC,IAAD,CAAUvB,GAAI,Y,wBCE7B6B,sBACXC,aAhBkB,SAACjB,GACjB,MAAO,CACHC,YAAaD,EAAMC,gBAKJ,SAACiB,GACtB,MAAO,CACHH,YAAa,SAACL,GACVQ,EAASC,YAAmBT,SAOpCU,IAFWJ,CAGZjB","file":"static/js/4.5a5a5866.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__iCmoe\",\"dialogsItems\":\"Dialogs_dialogsItems__3rViA\",\"active\":\"Dialogs_active__2POBQ\",\"dialog\":\"Dialogs_dialog__3FwI_\",\"messages\":\"Dialogs_messages__2ohDR\",\"message\":\"Dialogs_message__2xHmT\"};","import React  from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={classes.dialog + ' ' + classes.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React  from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={classes.dialog}>{props.message} </div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n//import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\n//let maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       //validate={[required, maxLength50]}\r\n                       placeholder='Enter your message' name=\"newMessageBody\" />\r\n            </div>\r\n            <div>\r\n                <button>Send222</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n      return {\r\n          dialogsPage: state.dialogsPage\r\n      };\r\n};\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    };\r\n};\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect //HOC - user authentication verification\r\n) (Dialogs);"],"sourceRoot":""}