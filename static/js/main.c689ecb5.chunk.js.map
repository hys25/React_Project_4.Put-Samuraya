{"version":3,"sources":["redux/dialogs-reducer.js","api/api.js","components/Users/users.module.css","assets/images/user.png","assets/images/preloader.gif","hoc/withAuthRedirect.js","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.js","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","utils/validators.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["initialState","messages","id","message","dialogs","name","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","module","exports","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","Boolean","window","location","hostname","match","Navbar","className","classes","nav","item","activeClassName","activeLink","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","log","Preloader","compose","bind","page","totalCount","Header","header","alt","loginBlock","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","backgroundColor","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.c689ecb5.chunk.js","sourcesContent":["let SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    messages : [\r\n        {id: 1, message : 'What did you learn?'},\r\n        {id: 2, message : 'How are you?'},\r\n        {id: 3, message : 'I learn React'},\r\n        {id: 4, message : 'Someone'},\r\n        {id: 5, message : 'Bla bla'}\r\n    ],\r\n    dialogs : [\r\n        {id: 1, name :'Dmytro'},\r\n        {id: 2, name :'Andrey'},\r\n        {id: 3, name :'Sveta'},\r\n        {id: 4, name :'Sasha'},\r\n        {id: 5, name :'Valera'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        newMessageBody\r\n    };\r\n};\r\n\r\nexport default dialogsReducer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"077d9669-de18-4cf9-9a0e-5b6073aaa331\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1se03\"};","module.exports = __webpack_public_path__ + \"static/media/user.b3e90dfe.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.588b8c26.gif\";","import React from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n   \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3fa19\",\"item\":\"Navbar_item__Hw__h\",\"activeLink\":\"Navbar_activeLink__uNK-y\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return <nav className={classes.nav}>\r\n    <div className={classes.item}>\r\n        <NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink>\r\n    </div>\r\n    <div className={`${classes.item} ${classes.active}`}>\r\n        <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>Messages</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n        <NavLink to=\"/users\" activeClassName={classes.activeLink}>Users</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n        <NavLink to=\"/news\" activeClassName={classes.activeLink}>News</NavLink>\r\n    </div>\r\n    <div className={classes.item}>\r\n        <NavLink to=\"/settings\" activeClassName={classes.activeLink}>Settings</NavLink>\r\n    </div>\r\n</nav>\r\n}\r\n\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={ ({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n       <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => { unfollow(user.id) }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => { follow(user.id) }}>\r\n                                      Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        console.log(\"USERS\");\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        users={this.props.users}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n                        followingInProgress={this.props.followingInProgress}\r\n             />\r\n        </>\r\n    }\r\n}\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}*/\r\nlet mapStateToProps = (state) => {\r\n   console.log('mapStateToProps USERS')\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers })\r\n)(UsersContainer)","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return <header className={classes.header}>\r\n        <img src=\"https://w7.pngwing.com/pngs/241/371/png-transparent-drawing-computer-icons-lightning-angle-photography-triangle.png\" alt=\"\"/>\r\n\r\n        <div className={classes.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    //dispatch(somethingelse());\r\n    //dispatch(somethingelse());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />} >\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader />\n        }\n\n        return (\n                    <div className='app-wrapper'>\n                        <HeaderContainer/>\n                        <Navbar/>\n                        <div className='app-wrapper-content'>\n                            <Route path='/dialogs'\n                                   render={withSuspense(DialogsContainer)}/>\n\n                            <Route path='/profile/:userId?'\n                                   render={withSuspense(ProfileContainer)} />\n\n                            <Route path='/users'\n                                   render={() => <UsersContainer/>}/>\n\n                            <Route path='/login'\n                                   render={() => <LoginPage/>}/>\n                        </div>\n                    </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n   return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\n\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\n\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {required} from \"../../../utils/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.gif\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3Xdtn\",\"error\":\"FormsControls_error__-K8lg\",\"formSummaryError\":\"FormsControls_formSummaryError__imCxJ\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1FzJH\",\"pageNumber\":\"Paginator_pageNumber__1SjrC\",\"selectedPage\":\"Paginator_selectedPage__3udON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3e_oT\",\"loginBlock\":\"Header_loginBlock__2lXyn\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}